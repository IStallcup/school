     1                                  	extern printf
     2                                  	extern scanf
     3                                  
     4                                  	
     5                                  section .data
     6                                  
     7 00000000 4E616D653A09090949-     	myname:		db "Name:			Isaac Stallcup", 10, 0	;name
     8 00000009 73616163205374616C-
     9 00000012 6C6375700A00       
    10                                  	len_myname: equ $ - myname 
    11                                  	
    12 00000018 50726F6772616D3A09-     	myprog:		db "Program:		calc.asm", 10, 0		;program name
    13 00000021 0963616C632E61736D-
    14 0000002A 0A00               
    15                                  	len_myprog:	equ $ - myprog
    16                                  	
    17 0000002C 496E70757420616E20-     	prompt:		db "Input an integer: ", 0
    18 00000035 696E74656765723A20-
    19 0000003E 00                 
    20                                  	len_prompt:	equ $ - prompt
    21                                  	
    22 0000003F 5468652073756D2069-     	dsum:		db "The sum is ", 0
    23 00000048 732000             
    24                                  	len_dsum:	equ $ - dsum
    25                                  	
    26 0000004B 54686520696E707574-     	conf:		db "The input is ", 0
    27 00000054 2069732000         
    28                                  	len_conf:	equ $ - conf
    29                                  	
    30                                  section .bss
    31                                  	
    32 00000000 <res 0000000C>          	input1:		resd 3
    33                                  	len_input1:	equ $ - input1
    34                                  	
    35 0000000C <res 0000000C>          	input2:		resd 3
    36                                  	len_input2:	equ $ - input2
    37                                  	
    38 00000018 <res 0000000C>          	oper:		resd 3
    39                                  	len_oper:	equ $ - oper
    40                                  	
    41                                  
    42                                  section .text
    43                                  
    44                                  	global main
    45                                  	
    46                                  	main:
    47                                  		
    48                                  		;displays name
    49 00000000 B804000000              		mov eax, 4
    50                                  		
    51 00000005 BB01000000              		mov ebx, 1
    52                                  		
    53 0000000A B9[00000000]            		mov ecx, myname
    54                                  		
    55 0000000F BA18000000              		mov edx, len_myname
    56                                  		
    57 00000014 CD80                    		int 80H
    58                                  		
    59                                  		;displays program name
    60 00000016 B804000000              		mov eax, 4
    61                                  		
    62 0000001B BB01000000              		mov ebx, 1
    63                                  		
    64 00000020 B9[18000000]            		mov ecx, myprog
    65                                  		
    66 00000025 BA14000000              		mov edx, len_myprog
    67                                  		
    68 0000002A CD80                    		int 80H
    69                                  		
    70                                  		;asks for input1
    71 0000002C B804000000              		mov eax, 4
    72                                  		
    73 00000031 BB01000000              		mov ebx, 1
    74                                  		
    75 00000036 B9[2C000000]            		mov ecx, prompt
    76                                  		
    77 0000003B BA13000000              		mov edx, len_prompt
    78                                  		
    79 00000040 CD80                    		int 80H
    80                                  		
    81                                  		;gets an input1
    82 00000042 B803000000              		mov eax, 3
    83                                  		
    84 00000047 BB00000000              		mov ebx, 0
    85                                  		
    86 0000004C B9[00000000]            		mov ecx, input1
    87                                  		
    88                                  		
    89 00000051 BA0C000000              		mov edx, len_input1
    90                                  		
    91 00000056 CD80                    		int 80H
    92                                  		
    93                                  		;confirms input1
    94 00000058 B804000000              		mov eax, 4
    95                                  		
    96 0000005D BB01000000              		mov ebx, 1
    97                                  		
    98 00000062 B9[4B000000]            		mov ecx, conf
    99                                  		
   100 00000067 BA0E000000              		mov edx, len_conf
   101                                  		
   102 0000006C CD80                    		int 80H
   103                                  		
   104 0000006E B804000000              		mov eax, 4
   105                                  		
   106 00000073 BB01000000              		mov ebx, 1
   107                                  		
   108 00000078 B9[00000000]            		mov ecx, input1
   109                                  		
   110 0000007D BA0C000000              		mov edx, len_input1
   111                                  		
   112 00000082 CD80                    		int 80H
   113                                  		
   114                                  		;asks for input2
   115 00000084 B804000000              		mov eax, 4
   116                                  		
   117 00000089 BB01000000              		mov ebx, 1
   118                                  		
   119 0000008E B9[2C000000]            		mov ecx, prompt
   120                                  		
   121 00000093 BA13000000              		mov edx, len_prompt
   122                                  		
   123 00000098 CD80                    		int 80H
   124                                  		
   125                                  		
   126                                  		;gets an input2
   127 0000009A B803000000              		mov eax, 3
   128                                  		
   129 0000009F BB00000000              		mov ebx, 0
   130                                  		
   131 000000A4 B9[0C000000]            		mov ecx, input2
   132                                  		
   133 000000A9 BA0C000000              		mov edx, len_input2
   134                                  		
   135 000000AE CD80                    		int 80H
   136                                  		
   137                                  		;confirms input2
   138 000000B0 B804000000              		mov eax, 4
   139                                  		
   140 000000B5 BB01000000              		mov ebx, 1
   141                                  		
   142 000000BA B9[4B000000]            		mov ecx, conf
   143                                  		
   144 000000BF BA0E000000              		mov edx, len_conf
   145                                  		
   146 000000C4 CD80                    		int 80H
   147                                  		
   148 000000C6 B804000000              		mov eax, 4
   149                                  		
   150 000000CB BB01000000              		mov ebx, 1
   151                                  		
   152 000000D0 B9[0C000000]            		mov ecx, input2
   153                                  		
   154 000000D5 BA0C000000              		mov edx, len_input2
   155                                  		
   156 000000DA CD80                    		int 80H
   157                                  		
   158                                  		;sum
   159 000000DC A1[00000000]            		mov eax, [input1]
   160                                  		
   161 000000E1 8B1D[0C000000]          		mov ebx, [input2]
   162                                  		
   163 000000E7 01D8                    		ADD eax, ebx
   164                                  		
   165 000000E9 A3[18000000]            		mov [oper], eax
   166                                  		
   167                                  		;display
   168 000000EE B804000000              		mov eax, 4
   169                                  		
   170 000000F3 BB01000000              		mov ebx, 1
   171                                  		
   172 000000F8 B9[3F000000]            		mov ecx, dsum
   173                                  		
   174 000000FD BA0C000000              		mov edx, len_dsum
   175                                  		
   176 00000102 CD80                    		int 80H
   177                                  		
   178                                  		;value
   179 00000104 B804000000              		mov eax, 4
   180                                  		
   181 00000109 BB01000000              		mov ebx, 1
   182                                  		
   183 0000010E B9[18000000]            		mov ecx, oper
   184                                  		
   185 00000113 CD80                    		int 80H
   186                                  		
   187 00000115 C3                      		ret
   188                                  		
